def has_fn(baskets, candid_pairs,buckets,support):        temp =[]        for each in baskets:            num=0            for items in range(len(candid_pairs[items])):                if set(each).issubset(set(candid_pairs[items])):                    num+=1                temp.append([each,num])                print temp        pairsout= [temp[i][0] for i in range(len(temp)) if temp[i][1]>=support]        output =[[temp.index(temp[each]) % buckets,temp[each][1]] for each in range(len(temp))]        pairs= [[temp.index(temp[each]) % buckets,temp[each][0]] for each in range(len(temp))]        for j in range(len(output)):            for k in range(j+1,len(output)-1):                if output[j][0] == output[k][0] :                    output[k][1]=output[j][1]+output[k][1]                    del(output[j])        out1=[]        for each in range(len(output)):            if output[each][1] >= support:                bitmap=1                out1.append((output[each][0],bitmap))        pairs_out=[]        for each in dict(out1):            for i in range(len(pairs)):                if pairs[i][0] ==each:                    pairs_out.append(list(pairs[i][1]))        if len(pairs_out) == 0:            return pairs_out, dict(output)        else:            print(dict(output),'\n',sorted(pairs_out),'\n')            return pairs_out, dict(output)