import networkx as nximport pandas as pdimport numpy as npimport sysInFile=sys.argv[1]k = int(sys.argv[2])OutFile=sys.argv[3]myfile = open( OutFile, "w" )final_edges = []final_clus=[]max_clus=[]edge_list = []index_edge=[]g = nx.read_edgelist(InFile,create_using=nx.Graph(), nodetype = int)edge_list= list(g.edges())edge_list=sorted(edge_list)final_edges=edge_listfor item in list(edge_list):    index_edge.extend(item)index_edge =sorted(set(index_edge))new_index_edge=index_edgecnt=1for i in range(k):      if(len(max_clus)>0):          final_clus.remove(max_clus)      mygraph = nx.Graph()      mygraph.add_nodes_from( new_index_edge )      mygraph.add_edges_from( final_edges )      nodelist = sorted( mygraph.nodes() )      adj_matrix = nx.adjacency_matrix( mygraph, nodelist )      data = adj_matrix.todense()      D = np.diag(np.ravel(np.sum(adj_matrix,axis=1)))      L=D-adj_matrix      l, U = np.linalg.eigh(L)      f = U[:,1]      positives_clus = []      negatives_clus = []      for i in range(len(f)):            if f[i] > 0:                  positives_clus.append(i)            else:                  negatives_clus.append(i)      positives_clus = [new_index_edge[x] for x in positives_clus]      final_clus.append(positives_clus)      negatives_clus = [new_index_edge[y] for y in negatives_clus]      final_clus.append(negatives_clus)      #print data[0,2877]      max_clus = max(final_clus, key=len)      new_index=sorted(max_clus)      final_edges=[]      print cnt      for i in range(len(max_clus)):            for j in range(len(max_clus)):                  if i != j:                        a=max_clus[i]                        b=max_clus[j]                        if data[a-1,b-1] == 1:                            print a, b                            final_edges.append(tuple([a,b]))      adj_matrix=np.zeros( [len(index_edge),len(index_edge)])print len(final_clus[0])print (final_clus[0])print len(final_clus[1])print (final_clus[1])print len(final_clus[2])print (final_clus[2])for m in range(len(final_clus)):      if (m != 0):            myfile.write( "\n" )      for item in final_clus[m]:            myfile.write(str(item))            if len(final_clus[m]) != final_clus[m].index(item)+1:                  myfile.write(",")myfile.close()