import networkx as nximport pandas as pdimport numpy as npimport sysInputFile=sys.argv[1]k = int(sys.argv[2])Outputfile = sys.argv[3]labels = []edge_list = []pos=[]neg=[]g = nx.read_edgelist(InputFile,create_using=nx.Graph(), nodetype = int)edge_list= list(g.edges())edge_list=sorted(edge_list)for item in list(edge_list):    labels.extend(item)labels =sorted(set(labels))newlabels= []newedge_list = []max_clus = []newlabels=labelsnewedge_list=edge_listcnt = 1final_clusters = []while(cnt < k):      if len(max_clus)>0:            final_clusters.remove( max_clus )      mygraph = nx.Graph()      mygraph.add_nodes_from(newlabels )      mygraph.add_edges_from( newedge_list )      nodelist = sorted( mygraph.nodes() )      adj_matrix = nx.adjacency_matrix( mygraph, nodelist )      am = pd.DataFrame( adj_matrix.todense() )      am.columns=newlabels      am.index=newlabels      #data=adj_matrix.todense()      D = np.diag(np.ravel(np.sum(adj_matrix,axis=1)))      L=D-adj_matrix      l, U = np.linalg.eigh(L)      second_eig = U[:,1]      pos = [x for x in range(len(second_eig)) if second_eig[x] >= 0]      neg = [x for x in range(len(second_eig)) if second_eig[x] < 0]      pos = [newlabels[j] for j in pos]      neg = [newlabels[l] for l in neg]      final_clusters.append(pos)      final_clusters.append(neg)      max_clus = max(final_clusters, key=len)      newlabels=sorted(max_clus)      newedge_list = []      for i in range(len(max_clus)):            for j in range(len(max_clus)):                  if i != j:                        a=max_clus[i]                        b=max_clus[j]                        if am[a][b] == 1:                              newedge_list.append(tuple([a,b]))      adj_matrix=np.zeros( [len(labels),len(labels)])      cnt += 1fp = open( Outputfile, "w" )for item in final_clusters:            fp.write("%s" %  ",".join(map(str,item)))            fp.write('\n')fp.close()