if __name__ == '__main__':        input_file = sys.argv[1]        a = sys.argv[2]        b = sys.argv[3]        support = sys.argv[4]        bucket_size = sys.argv[5]        foldername=sys.argv[6]        a=int(a)        b=int(b)        support = int(support)        bucket_size = int(bucket_size)        path= foldername        #print foldername        if not os.path.exists(path):            os.makedirs(path)        file = open(input_file,'r')        for transaction in file:            transaction = transaction.strip().split(',')            for each_basket in transaction:                singleton_set.setdefault(each_basket, 0)                count = singleton_set.get(each_basket)                count += 1                singleton_set[each_basket] = count            singleton_dict=singleton_set        for item, count in singleton_dict.iteritems():            if count >= support:                frequent_item_list.append(item)        print frequent_item_list        frequent_item_list.sort()        frq_sets_all.append(frequent_item_list)        file.close()        print frq_sets_all        #compute_frequent_singleton_set(input_file)        while 0 != len(frequent_item_list):            hash_bucket = {}            for i in range(bucket_size):                hash_bucket[i] = 0            bit_map = [0]            #print "Hash bucket after initializing to 0: ", hash_bucket            bit_map,hash_bucket= compute_hash(bit_map,hash_bucket,input_file)            #print bit_map            #            # print hash_bucket            candidate_item_set = compute_candidate_item_sets(input_file, bit_map)            frequent_item_list = compute_frequent_item_sets(input_file, candidate_item_set)            frq_sets_all.append(frequent_item_list)            filename2 = 'Candidate_pairs.txt'            cand_file= open(os.path.join(path, filename2), "w")            for items in candidate_item_set:                cand_file.write(str(items)+'\n')            cand_file.close()            filename1 = 'frequent_items.txt'            frq_file = open(os.path.join(path, filename1), "w")            for pairs in frq_sets_all:                for all in pairs:                    # all=str(all).replace("[","").replace("]","").replace("'","")                    frq_file.write(int(all)+'\n')            frq_file.close()            # #finding the FPR            # num_of_frequent_buckets=            # total_num_of_buckets= bucket_size            # FPR =0            # FPR= num_of_frequent_buckets/total_num_of_buckets