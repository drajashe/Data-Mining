import numpy as npimport systxtFile=sys.argv[1]if __name__ == "__main__":        data=[]        dta=[]        raw_data = open("sam.txt", 'r')        reader = np.loadtxt(raw_data,delimiter=',')        for row in reader:            data.append(row)        data = np.asarray(data)        #data = np.asarray(data)        clust_cnt=len(data)        clusters=map(lambda x: [x], range(clust_cnt))        k=int(sys.argv[2])        it=6        cent_indices=[]        new_dist_matrix =(np.sum((data[None,:] - data[:, None])**2, -1)**0.5)        original_mat= new_dist_matrix        np.fill_diagonal(new_dist_matrix, np.inf)        while(it > k):            i,j=np.unravel_index(np.argmin(new_dist_matrix),new_dist_matrix.shape)            #print i,j            if(i<j):                #print i,j                val=[i]                #clusters.extend([[j]])                #for i,row in enumerate(grid[2:]):                for n,m in enumerate(clusters):                    #distances = [(1, 0, clusters[1][0])]                    #distances += [(i+2, j, c) for j,c in enumerate(row[:i+2])]                    if m == val:                        clusters[n].append((j))                new_dist_matrix[i,:]= np.minimum(new_dist_matrix[i,:],new_dist_matrix[j,:])                new_dist_matrix[:,i]= np.minimum(new_dist_matrix[:,i],new_dist_matrix[:,j])                np.fill_diagonal(new_dist_matrix, np.inf)                new_dist_matrix = np.delete(new_dist_matrix, j, axis=0)                new_dist_matrix = np.delete(new_dist_matrix, j, axis=1)                del clusters[j]                it-=1                #print clusters            else:                val=[j]                print i,j                #clusters.extend([[j]])                for n,m in enumerate(clusters):                    if m == val:                        clusters[n].append((i))                new_dist_matrix[j,:]= np.minimum(new_dist_matrix[i,:],new_dist_matrix[j,:])                new_dist_matrix[:,j]= np.minimum(new_dist_matrix[:,i],new_dist_matrix[:,j])                np.fill_diagonal(new_dist_matrix, np.inf)                new_dist_matrix = np.delete(new_dist_matrix, i, axis=0)                new_dist_matrix = np.delete(new_dist_matrix, i, axis=1)                del clusters[i]                #print clusters                it-=1            print new_dist_matrix